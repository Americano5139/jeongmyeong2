name: CI/CD Deploy Nextcloud

on:
  workflow_dispatch:

env:
  IMAGE_NAME: nextcloud
  AWS_REGION: "ap-northeast-2"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ./docker

      - name: DockerHub 로그인 및 이미지 푸시
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
          docker push ${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  terraform-apply:
    runs-on: ubuntu-latest
    needs: build-and-push
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false -var="key_name=${{ secrets.KEY_NAME }}"

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve -var="key_name=${{ secrets.KEY_NAME }}"

      - name: Save Terraform Outputs
        id: tf_outputs
        run: |
          echo "RDS_HOST=$(terraform output -raw rds_endpoint)" >> $GITHUB_ENV
          echo "RDS_DB_NAME=nextcloud" >> $GITHUB_ENV
          echo "RDS_USERNAME=nextcloud" >> $GITHUB_ENV
          echo "RDS_PASSWORD=$(terraform output -raw db_password)" >> $GITHUB_ENV
          echo "S3_BUCKET=$(terraform output -raw bucket_name)" >> $GITHUB_ENV
          echo "S3_ACCESS_KEY=$(terraform output -raw s3_access_key)" >> $GITHUB_ENV
          echo "S3_SECRET_KEY=$(terraform output -raw s3_secret_key)" >> $GITHUB_ENV

  deploy-to-cluster:
    runs-on: self-hosted
    needs: terraform-apply
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create nextcloud-secret
        run: |
          kubectl create secret generic nextcloud-secret \
            --from-literal=AWS_ACCESS_KEY_ID=${{ env.S3_ACCESS_KEY }} \
            --from-literal=AWS_SECRET_ACCESS_KEY=${{ env.S3_SECRET_KEY }} \
            --from-literal=S3_BUCKET=${{ env.S3_BUCKET }} \
            --from-literal=RDS_DB_NAME=${{ env.RDS_DB_NAME }} \
            --from-literal=RDS_HOST=${{ env.RDS_HOST }} \
            --from-literal=RDS_USERNAME=${{ env.RDS_USERNAME }} \
            --from-literal=RDS_PASSWORD=${{ env.RDS_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Replace Docker image in deployment.yaml
        run: |
          sed -i "s|image: .*|image: ${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|" k8s/deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
